from lib.durak import collect, pass_with_many, start_game, yield_attack


def test_start_game():
    assert (
        start_game(
            from_state={
                "draw_pile": [
                    "10C",
                    "QC",
                    "JS",
                    "6S",
                    "9D",
                    "7S",
                    "QD",
                    "AS",
                    "10D",
                    "7H",
                    "10S",
                    "9C",
                    "KC",
                    "9H",
                    "QH",
                    "JC",
                    "8H",
                    "10H",
                    "QS",
                    "KH",
                    "AD",
                    "KD",
                    "JH",
                    "8S",
                    "AH",
                    "6C",
                    "7C",
                    "7D",
                    "6D",
                    "6H",
                    "AC",
                    "8D",
                    "9S",
                    "KS",
                    "8C",
                    "JD",
                ],
                "hands": {"anna": [], "vasyl": [], "igor": [], "grusha": []},
                "players": ["anna", "vasyl", "igor", "grusha"],
                "pass_count": 0,
                "table": [],
                "trump_suit": "diamonds",
                "yielded": [],
                "lowest_rank": "6",
                "attack_limit": 6,
                "with_passing": True,
            },
            user="anna",
            payload={},
        )
    ) == {
        "durak": None,
        "hands": {
            "anna": ["10C", "QC", "JS", "6S", "9D", "7S"],
            "igor": ["KC", "9H", "QH", "JC", "8H", "10H"],
            "vasyl": ["QD", "AS", "10D", "7H", "10S", "9C"],
            "grusha": ["QS", "KH", "AD", "KD", "JH", "8S"],
        },
        "table": [],
        "players": ["anna", "vasyl", "igor", "grusha"],
        "winners": set([]),
        "yielded": [],
        "defender": "vasyl",
        "attackers": ["anna"],
        "draw_pile": [
            "AH",
            "6C",
            "7C",
            "7D",
            "6D",
            "6H",
            "AC",
            "8D",
            "9S",
            "KS",
            "8C",
            "JD",
        ],
        "pass_count": 0,
        "trump_suit": "diamonds",
        "lowest_rank": "6",
        "attack_limit": 6,
        "legal_passes": {"cards": set([]), "limit": 6},
        "with_passing": True,
        "legal_attacks": {
            "cards": set(["QC", "10C", "JS", "6S", "7S", "9D"]),
            "limit": 6,
        },
        "legal_defenses": {},
    }


def test_pass_with_last_card():
    assert pass_with_many(
        from_state={
            "hands": {
                "anna": ["10H"],
                "igor": ["9S", "QC"],
                "vasyl": ["AH", "10C"],
                "grusha": ["QS", None, "KH"],
            },
            "table": [["10D"]],
            "players": ["grusha", "anna", "vasyl", "igor"],
            "yielded": [],
            "draw_pile": [],
            "pass_count": 0,
            "trump_suit": "hearts",
            "lowest_rank": "6",
            "attack_limit": 6,
            "with_passing": True,
        },
        user="anna",
        payload={"cards": ["10H"]},
    ) == {
        "durak": None,
        "hands": {
            "anna": [None],
            "igor": ["9S", "QC"],
            "vasyl": ["AH", "10C"],
            "grusha": ["QS", None, "KH"],
        },
        "table": [["10D"], ["10H"]],
        "players": ["anna", "vasyl", "igor", "grusha"],
        "winners": set(["anna"]),
        "yielded": [],
        "defender": "vasyl",
        "attackers": ["igor", "grusha"],
        "draw_pile": [],
        "pass_count": 1,
        "trump_suit": "hearts",
        "lowest_rank": "6",
        "attack_limit": 6,
        "legal_passes": {"cards": set(["10C"]), "limit": 0},
        "with_passing": True,
        "legal_attacks": {"cards": set(), "limit": 0},
        "legal_defenses": {"10D": set(["AH"]), "10H": set(["AH"])},
    }


def test_defend_successfully_after_attack_plays_last_card():
    assert yield_attack(
        from_state={
            "hands": {
                "anna": ["KS", None, None, None, "JD", None],
                "igor": ["9S", "QD", None, "6S", "6D", "JS"],
                "vasyl": ["JC", "QS", "8C", "QH", None, "6H"],
                "grusha": [None, None],
            },
            "table": [["8H", "AH"], ["8D", "AD"], ["AC", "7S"], ["8S", "AS"]],
            "players": ["grusha", "anna", "vasyl", "igor"],
            "yielded": ["vasyl"],
            "draw_pile": [],
            "pass_count": 0,
            "trump_suit": "spades",
            "lowest_rank": "6",
            "attack_limit": 6,
            "with_passing": True,
        },
        user="igor",
        payload={},
    ) == {
        "durak": None,
        "hands": {
            "anna": ["KS", "JD"],
            "igor": ["9S", "QD", "6S", "6D", "JS"],
            "vasyl": ["JC", "QS", "8C", "QH", "6H"],
            "grusha": [],
        },
        "table": [],
        "players": ["anna", "vasyl", "igor", "grusha"],
        "winners": set(["grusha"]),
        "yielded": [],
        "defender": "vasyl",
        "attackers": ["anna"],
        "draw_pile": [],
        "pass_count": 0,
        "trump_suit": "spades",
        "lowest_rank": "6",
        "attack_limit": 6,
        "legal_passes": {"cards": set([]), "limit": 5},
        "with_passing": True,
        "legal_attacks": {"cards": set(["KS", "JD"]), "limit": 5},
        "legal_defenses": {},
    }


def test_collect_rotates_properly():
    assert collect(
        from_state={
            "hands": {
                "anna": [None],
                "igor": ["9S", "6S", "6D", "JD", "QD", "JC", "JS", "QH", "QS"],
                "vasyl": ["8C", "6H"],
                "grusha": [],
            },
            "table": [["KS"]],
            "players": ["anna", "vasyl", "igor", "grusha"],
            "yielded": [],
            "draw_pile": [],
            "pass_count": 0,
            "trump_suit": "spades",
            "lowest_rank": "6",
            "attack_limit": 6,
            "with_passing": True,
        },
        user="vasyl",
        payload={},
    ) == {
        "durak": None,
        "hands": {
            "anna": [],
            "igor": ["9S", "6S", "6D", "JD", "QD", "JC", "JS", "QH", "QS"],
            "vasyl": ["8C", "6H", "KS"],
            "grusha": [],
        },
        "table": [],
        "players": ["igor", "anna", "vasyl", "grusha"],
        "winners": set(["anna", "grusha"]),
        "yielded": [],
        "defender": "vasyl",
        "attackers": ["igor"],
        "draw_pile": [],
        "pass_count": 0,
        "trump_suit": "spades",
        "lowest_rank": "6",
        "attack_limit": 6,
        "legal_passes": {"cards": set([]), "limit": 9},
        "with_passing": True,
        "legal_attacks": {
            "cards": set(["QS", "JS", "9S", "JD", "QD", "JC", "6D", "QH", "6S"]),
            "limit": 3,
        },
        "legal_defenses": {},
    }


def test_yielding_when_defender_wins():
    assert yield_attack(
        from_state={
            "hands": {
                "anna": [None, None, None, None],
                "igor": ["KC", None, "6D"],
                "vasyl": ["AC", "8H", "10D", None, "AS", None, "9C", "9H", "QD", "9S"],
                "grusha": [None, "KH", "AD", "KD", "JH"],
            },
            "table": [["QH", "8D"], ["QS", "KS"], ["8C", "9D"], ["8S", "JD"]],
            "players": ["grusha", "anna", "vasyl", "igor"],
            "yielded": ["vasyl", "igor"],
            "draw_pile": [],
            "pass_count": 1,
            "trump_suit": "diamonds",
            "lowest_rank": "6",
            "attack_limit": 6,
            "with_passing": True,
        },
        payload={},
        user="grusha",
    ) == {
        "durak": None,
        "hands": {
            "anna": [],
            "igor": ["KC", "6D"],
            "vasyl": ["AC", "8H", "10D", "AS", "9C", "9H", "QD", "9S"],
            "grusha": ["KH", "AD", "KD", "JH"],
        },
        "table": [],
        "players": ["anna", "vasyl", "igor", "grusha"],
        "winners": set(["anna"]),
        "yielded": [],
        "defender": "igor",
        "attackers": ["vasyl"],
        "draw_pile": [],
        "pass_count": 0,
        "trump_suit": "diamonds",
        "lowest_rank": "6",
        "attack_limit": 6,
        "legal_passes": {"cards": set(), "limit": 4},
        "with_passing": True,
        "legal_attacks": {
            "cards": set(["9C", "AS", "9H", "9S", "QD", "AC", "8H", "10D"]),
            "limit": 2,
        },
        "legal_defenses": {},
    }
